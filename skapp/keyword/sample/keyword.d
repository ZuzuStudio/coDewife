module sample.keyword;

import terms.common;
import fsm.configurations;

Engine makeHungryMachine()
{
  return makeAllIdentity!(forward, "UK")();
}


Engine makeKeyWord()
{
  Engine[string] table;
  table["KeyWord"] = makeParallel(makeSequence!(forward, "KW")("abstract"),
                                  makeSequence!(forward, "KW")("alias"),
                                  makeSequence!(forward, "KW")("align"),
                                  makeSequence!(forward, "KW")("asm"),
                                  makeSequence!(forward, "KW")("assert"),
                                  makeSequence!(forward, "KW")("auto"),
                                  makeSequence!(forward, "KW")("body"),
                                  makeSequence!(forward, "KW")("bool"),
                                  makeSequence!(forward, "KW")("break"),
                                  makeSequence!(forward, "KW")("byte"),
                                  makeSequence!(forward, "KW")("case"),
                                  makeSequence!(forward, "KW")("cast"),
                                  makeSequence!(forward, "KW")("catch"),
                                  makeSequence!(forward, "KW")("cdouble"),
                                  makeSequence!(forward, "KW")("cent"),
                                  makeSequence!(forward, "KW")("cfloat"),
                                  makeSequence!(forward, "KW")("char"),
                                  makeSequence!(forward, "KW")("class"),
                                  makeSequence!(forward, "KW")("const"),
                                  makeSequence!(forward, "KW")("continue"),
                                  makeSequence!(forward, "KW")("creal"),
                                  makeSequence!(forward, "KW")("dchar"),
                                  makeSequence!(forward, "KW")("debug"),
                                  makeSequence!(forward, "KW")("default"),
                                  makeSequence!(forward, "KW")("delegate"),
                                  makeSequence!(forward, "KW")("delete"),
                                  makeSequence!(forward, "KW")("deprecated"),
                                  makeSequence!(forward, "KW")("double"),
                                  makeSequence!(forward, "KW")("do"),
                                  makeSequence!(forward, "KW")("else"),
                                  makeSequence!(forward, "KW")("enum"),
                                  makeSequence!(forward, "KW")("export"),
                                  makeSequence!(forward, "KW")("extern"),
                                  makeSequence!(forward, "KW")("false"),
                                  makeSequence!(forward, "KW")("finally"),                                  
                                  makeSequence!(forward, "KW")("final"),
                                  makeSequence!(forward, "KW")("float"),
                                  makeSequence!(forward, "KW")("foreach_reverse"),
                                  makeSequence!(forward, "KW")("foreach"),                                  
                                  makeSequence!(forward, "KW")("for"),
                                  makeSequence!(forward, "KW")("function"),
                                  makeSequence!(forward, "KW")("goto"),
                                  makeSequence!(forward, "KW")("idouble"),
                                  makeSequence!(forward, "KW")("ifloat"),                                  
                                  makeSequence!(forward, "KW")("if"),
                                  makeSequence!(forward, "KW")("immutable"),
                                  makeSequence!(forward, "KW")("import"),
                                  makeSequence!(forward, "KW")("interface"),
                                  makeSequence!(forward, "KW")("invariant"),
                                  makeSequence!(forward, "KW")("inout"),
                                  makeSequence!(forward, "KW")("int"),                                  
                                  makeSequence!(forward, "KW")("in"),
                                  makeSequence!(forward, "KW")("ireal"),
                                  makeSequence!(forward, "KW")("is"),
                                  makeSequence!(forward, "KW")("lazy"),
                                  makeSequence!(forward, "KW")("long"),
                                  makeSequence!(forward, "KW")("mixin"),
                                  makeSequence!(forward, "KW")("module"),
                                  makeSequence!(forward, "KW")("new"),
                                  makeSequence!(forward, "KW")("nothrow"),
                                  makeSequence!(forward, "KW")("null"),
                                  makeSequence!(forward, "KW")("out"),
                                  makeSequence!(forward, "KW")("override"),
                                  makeSequence!(forward, "KW")("package"),
                                  makeSequence!(forward, "KW")("pragma"),
                                  makeSequence!(forward, "KW")("private"),
                                  makeSequence!(forward, "KW")("protected"),
                                  makeSequence!(forward, "KW")("public"),
                                  makeSequence!(forward, "KW")("pure"),
                                  makeSequence!(forward, "KW")("real"),
                                  makeSequence!(forward, "KW")("ref"),
                                  makeSequence!(forward, "KW")("return"),
                                  makeSequence!(forward, "KW")("scope"),
                                  makeSequence!(forward, "KW")("shared"),
                                  makeSequence!(forward, "KW")("short"),
                                  makeSequence!(forward, "KW")("static"),
                                  makeSequence!(forward, "KW")("struct"),
                                  makeSequence!(forward, "KW")("super"),
                                  makeSequence!(forward, "KW")("switch"),
                                  makeSequence!(forward, "KW")("synchronized"),
                                  makeSequence!(forward, "KW")("template"),
                                  makeSequence!(forward, "KW")("this"),
                                  makeSequence!(forward, "KW")("throw"),
                                  makeSequence!(forward, "KW")("true"),
                                  makeSequence!(forward, "KW")("try"),
                                  makeSequence!(forward, "KW")("typedef"),
                                  makeSequence!(forward, "KW")("typeid"),
                                  makeSequence!(forward, "KW")("typeof"),
                                  makeSequence!(forward, "KW")("ubyte"),
                                  makeSequence!(forward, "KW")("ucent"),
                                  makeSequence!(forward, "KW")("uint"),
                                  makeSequence!(forward, "KW")("ulong"),
                                  makeSequence!(forward, "KW")("union"),
                                  makeSequence!(forward, "KW")("unittest"),
                                  makeSequence!(forward, "KW")("ushort"),
                                  makeSequence!(forward, "KW")("version"),
                                  makeSequence!(forward, "KW")("void"),
                                  makeSequence!(forward, "KW")("volatile"),
                                  makeSequence!(forward, "KW")("wchar"),
                                  makeSequence!(forward, "KW")("while"),
                                  makeSequence!(forward, "KW")("with"),
                                  makeSequence!(forward, "KW")("__FILE__"),
                                  makeSequence!(forward, "KW")("__MODULE__"),
                                  makeSequence!(forward, "KW")("__LINE__"),
                                  makeSequence!(forward, "KW")("__FUNCTION__"),
                                  makeSequence!(forward, "KW")("__PRETTY_FUNCTION__"),
                                  makeSequence!(forward, "KW")("__gshared"),
                                  makeSequence!(forward, "KW")("__traits"),
                                  makeSequence!(forward, "KW")("__vector"),
                                  makeSequence!(forward, "KW")("__parameters")
                                  );

  return table["KeyWord"];
}

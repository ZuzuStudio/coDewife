module sample.keyword;

import terms.keyword;
import terms.invariantsequence;
import fsm.configurations;

Engine makeHungryMachine()
{
  return makeAllIdentity!(forward, Unknown)();
}


Engine makeKeyWord()
{
  Engine[string] table;
  table["KeyWord"] = makeParallel(makeSequence!(forward, KeyWord)("abstract"),
                                  makeSequence!(forward, KeyWord)("alias"),
                                  makeSequence!(forward, KeyWord)("align"),
                                  makeSequence!(forward, KeyWord)("asm"),
                                  makeSequence!(forward, KeyWord)("assert"),
                                  makeSequence!(forward, KeyWord)("auto"),
                                  makeSequence!(forward, KeyWord)("body"),
                                  makeSequence!(forward, KeyWord)("bool"),
                                  makeSequence!(forward, KeyWord)("break"),
                                  makeSequence!(forward, KeyWord)("byte"),
                                  makeSequence!(forward, KeyWord)("case"),
                                  makeSequence!(forward, KeyWord)("cast"),
                                  makeSequence!(forward, KeyWord)("catch"),
                                  makeSequence!(forward, KeyWord)("cdouble"),
                                  makeSequence!(forward, KeyWord)("cent"),
                                  makeSequence!(forward, KeyWord)("cfloat"),
                                  makeSequence!(forward, KeyWord)("char"),
                                  makeSequence!(forward, KeyWord)("class"),
                                  makeSequence!(forward, KeyWord)("const"),
                                  makeSequence!(forward, KeyWord)("continue"),
                                  makeSequence!(forward, KeyWord)("creal"),
                                  makeSequence!(forward, KeyWord)("dchar"),
                                  makeSequence!(forward, KeyWord)("debug"),
                                  makeSequence!(forward, KeyWord)("default"),
                                  makeSequence!(forward, KeyWord)("delegate"),
                                  makeSequence!(forward, KeyWord)("delete"),
                                  makeSequence!(forward, KeyWord)("deprecated"),
                                  makeSequence!(forward, KeyWord)("double"),
                                  makeSequence!(forward, KeyWord)("do"),
                                  makeSequence!(forward, KeyWord)("else"),
                                  makeSequence!(forward, KeyWord)("enum"),
                                  makeSequence!(forward, KeyWord)("export"),
                                  makeSequence!(forward, KeyWord)("extern"),
                                  makeSequence!(forward, KeyWord)("false"),
                                  makeSequence!(forward, KeyWord)("finally"),                                  
                                  makeSequence!(forward, KeyWord)("final"),
                                  makeSequence!(forward, KeyWord)("float"),
                                  makeSequence!(forward, KeyWord)("foreach_reverse"),
                                  makeSequence!(forward, KeyWord)("foreach"),                                  
                                  makeSequence!(forward, KeyWord)("for"),
                                  makeSequence!(forward, KeyWord)("function"),
                                  makeSequence!(forward, KeyWord)("goto"),
                                  makeSequence!(forward, KeyWord)("idouble"),
                                  makeSequence!(forward, KeyWord)("ifloat"),                                  
                                  makeSequence!(forward, KeyWord)("if"),
                                  makeSequence!(forward, KeyWord)("immutable"),
                                  makeSequence!(forward, KeyWord)("import"),
                                  makeSequence!(forward, KeyWord)("interface"),
                                  makeSequence!(forward, KeyWord)("invariant"),
                                  makeSequence!(forward, KeyWord)("inout"),
                                  makeSequence!(forward, KeyWord)("int"),                                  
                                  makeSequence!(forward, KeyWord)("in"),
                                  makeSequence!(forward, KeyWord)("ireal"),
                                  makeSequence!(forward, KeyWord)("is"),
                                  makeSequence!(forward, KeyWord)("lazy"),
                                  makeSequence!(forward, KeyWord)("long"),
                                  makeSequence!(forward, KeyWord)("mixin"),
                                  makeSequence!(forward, KeyWord)("module"),
                                  makeSequence!(forward, KeyWord)("new"),
                                  makeSequence!(forward, KeyWord)("nothrow"),
                                  makeSequence!(forward, KeyWord)("null"),
                                  makeSequence!(forward, KeyWord)("out"),
                                  makeSequence!(forward, KeyWord)("override"),
                                  makeSequence!(forward, KeyWord)("package"),
                                  makeSequence!(forward, KeyWord)("pragma"),
                                  makeSequence!(forward, KeyWord)("private"),
                                  makeSequence!(forward, KeyWord)("protected"),
                                  makeSequence!(forward, KeyWord)("public"),
                                  makeSequence!(forward, KeyWord)("pure"),
                                  makeSequence!(forward, KeyWord)("real"),
                                  makeSequence!(forward, KeyWord)("ref"),
                                  makeSequence!(forward, KeyWord)("return"),
                                  makeSequence!(forward, KeyWord)("scope"),
                                  makeSequence!(forward, KeyWord)("shared"),
                                  makeSequence!(forward, KeyWord)("short"),
                                  makeSequence!(forward, KeyWord)("static"),
                                  makeSequence!(forward, KeyWord)("struct"),
                                  makeSequence!(forward, KeyWord)("super"),
                                  makeSequence!(forward, KeyWord)("switch"),
                                  makeSequence!(forward, KeyWord)("synchronized"),
                                  makeSequence!(forward, KeyWord)("template"),
                                  makeSequence!(forward, KeyWord)("this"),
                                  makeSequence!(forward, KeyWord)("throw"),
                                  makeSequence!(forward, KeyWord)("true"),
                                  makeSequence!(forward, KeyWord)("try"),
                                  makeSequence!(forward, KeyWord)("typedef"),
                                  makeSequence!(forward, KeyWord)("typeid"),
                                  makeSequence!(forward, KeyWord)("typeof"),
                                  makeSequence!(forward, KeyWord)("ubyte"),
                                  makeSequence!(forward, KeyWord)("ucent"),
                                  makeSequence!(forward, KeyWord)("uint"),
                                  makeSequence!(forward, KeyWord)("ulong"),
                                  makeSequence!(forward, KeyWord)("union"),
                                  makeSequence!(forward, KeyWord)("unittest"),
                                  makeSequence!(forward, KeyWord)("ushort"),
                                  makeSequence!(forward, KeyWord)("version"),
                                  makeSequence!(forward, KeyWord)("void"),
                                  makeSequence!(forward, KeyWord)("volatile"),
                                  makeSequence!(forward, KeyWord)("wchar"),
                                  makeSequence!(forward, KeyWord)("while"),
                                  makeSequence!(forward, KeyWord)("with"),
                                  makeSequence!(forward, KeyWord)("__FILE__"),
                                  makeSequence!(forward, KeyWord)("__MODULE__"),
                                  makeSequence!(forward, KeyWord)("__LINE__"),
                                  makeSequence!(forward, KeyWord)("__FUNCTION__"),
                                  makeSequence!(forward, KeyWord)("__PRETTY_FUNCTION__"),
                                  makeSequence!(forward, KeyWord)("__gshared"),
                                  makeSequence!(forward, KeyWord)("__traits"),
                                  makeSequence!(forward, KeyWord)("__vector"),
                                  makeSequence!(forward, KeyWord)("__parameters")
                                  );

  return table["KeyWord"];
}
